{
  "manifest": {
    "name": "jstransformer",
    "version": "0.0.2",
    "description": "Normalize the API of any jstransformer",
    "keywords": [
      "jstransformer"
    ],
    "dependencies": {
      "is-promise": "^2.0.0",
      "promise": "^6.0.1"
    },
    "devDependencies": {
      "coveralls": "^2.11.2",
      "istanbul": "^0.3.5",
      "testit": "^1.2.0"
    },
    "scripts": {
      "test": "node test",
      "coverage": "istanbul cover test",
      "coveralls": "npm run coverage && cat ./coverage/lcov.info | coveralls"
    },
    "files": [
      "index.js",
      "LICENSE"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/jstransformers/jstransformer.git"
    },
    "author": {
      "name": "ForbesLindesay"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v2/npm-jstransformer-0.0.2-7aae29a903d196cfa0973d885d3e47947ecd76ab/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\"><img src=\"https://cdn.rawgit.com/jstransformers/jstransformer/2bb6dc6c410e8683a17a4af5f1b73bcbee95aada/logo.svg\" width=\"300px\" height=\"299px\" /></p>\n<h1 align=\"center\">JSTransformer</h1>\n<p align=\"center\">Normalize the API of any jstransformer</p>\n\n<p align=\"center\"><a href=\"https://travis-ci.org/jstransformers/jstransformer\"><img src=\"https://img.shields.io/travis/jstransformers/jstransformer/master.svg\" alt=\"Build Status\"></a>\n<a href=\"https://gemnasium.com/jstransformers/jstransformer\"><img src=\"https://img.shields.io/gemnasium/jstransformers/jstransformer.svg\" alt=\"Dependency Status\"></a>\n<a href=\"https://coveralls.io/r/jstransformers/jstransformer?branch=master\"><img src=\"https://img.shields.io/coveralls/jstransformers/jstransformer/master.svg\" alt=\"Coverage Status\"></a>\n<a href=\"https://www.npmjs.org/package/jstransformer\"><img src=\"https://img.shields.io/npm/v/jstransformer.svg\" alt=\"NPM version\"></a></p>\n\n## Installation\n\n    npm install jstransformer\n\n## Usage\n\n```js\nvar transformer = require('jstransformer');\nvar marked = transformer(require('jstransformer-marked'));\n\nvar options = {};\nvar res = marked.render('Some **markdown**', options);\n// => {body: 'Some <strong>markdown</strong>', dependencies: []}\n```\n\nThis gives the same API regardless of the jstransformer passed in.\n\n## API\n\nA transformer, once normalised using this module, will implement the following methods.  Note that if the underlying transformer cannot be used to implement the functionality, it may ultimately just throw an error.\n\n### Returned object from `.render*`\n\n```js\n{body: String, dependencies: Array.<String>}\n```\n\n - `body` represents the result as a string\n - `dependencies` is an array of files that were read in as part of the render process (or an empty array if there were no dependencies)\n\n### `.render`\n\n```js\ntransformer.render(str, options, locals);\n=> {body: String, dependencies: Array.<String>}\n```\n\n_requires the underlying transform to implement `.render` or `.compile`_\n\nTransform a string and return an object.\n\n### `.renderAsync`\n\n```js\ntransformer.renderAsync(str[, options], locals, callback);\n```\n\n```js\ntransformer.renderAsync(str[, options], locals);\n=> Promise({body: String, dependencies: Array.<String>})\n```\n\n_requires the underlying transform to implement `.renderAsync` or `.render`_\n\nTransform a string asynchronously. If a callback is provided, it is called as `callback(err, data)`, otherwise a Promise is returned.\n\n### `.renderFile`\n\n```js\ntransformer.renderFile(filename, options, locals)\n=> {body: String, dependencies: Array.<String>}\n```\n\n_requires the underlying transform to implement `.renderFile`, `.render`, `.compileFile`, or `.compile`_\n\nTransform a file and return an object.\n\n### `.renderFileAsync`\n\n```js\ntransformer.renderFileAsync(filename[, options], locals, callback);\n```\n\n```js\ntransformer.renderFileAsync(filename[, options], locals);\n=> Promise({body: String, dependencies: Array.<String>})\n```\n\n_requires the underlying transform to implement `.renderFileAsync`, `.renderFile`, `.renderAsync`, `.render`, `.compileFileAsync`, `.compileFile`, `.compileAsync`, or `.compileFile`_\n\nTransform a file asynchronously. If a callback is provided, it is called as `callback(err, data)`, otherwise a Promise is returned.\n\n### `.inputFormats`\n\n```js\nvar formats = transformer.inputFormats;\n=> ['md', 'markdown']\n```\n\nReturns an array of strings representing potential input formats for the transform. If not provided directly by the transform, results in an array containing the name of the transform.\n\n## License\n\nMIT\n",
    "licenseText": "Copyright (c) 2014 Forbes Lindesay\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/jstransformer/-/jstransformer-0.0.2.tgz#7aae29a903d196cfa0973d885d3e47947ecd76ab",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/jstransformer/-/jstransformer-0.0.2.tgz",
    "hash": "7aae29a903d196cfa0973d885d3e47947ecd76ab",
    "integrity": "sha1-eq4pqQPRls+glz2IXT5HlH7Ndqs=",
    "registry": "npm",
    "packageName": "jstransformer"
  },
  "registry": "npm",
  "hash": "7aae29a903d196cfa0973d885d3e47947ecd76ab"
}